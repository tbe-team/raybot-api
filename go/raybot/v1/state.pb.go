// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: raybot/v1/state.proto

package raybotv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatteryState_Status int32

const (
	// The battery status is unknown
	BatteryState_STATUS_UNSPECIFIED BatteryState_Status = 0
	// The battery is charging
	BatteryState_STATUS_CHARGING BatteryState_Status = 1
	// The battery is discharging
	BatteryState_STATUS_DISCHARGING BatteryState_Status = 2
)

// Enum value maps for BatteryState_Status.
var (
	BatteryState_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_CHARGING",
		2: "STATUS_DISCHARGING",
	}
	BatteryState_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_CHARGING":    1,
		"STATUS_DISCHARGING": 2,
	}
)

func (x BatteryState_Status) Enum() *BatteryState_Status {
	p := new(BatteryState_Status)
	*p = x
	return p
}

func (x BatteryState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatteryState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_raybot_v1_state_proto_enumTypes[0].Descriptor()
}

func (BatteryState_Status) Type() protoreflect.EnumType {
	return &file_raybot_v1_state_proto_enumTypes[0]
}

func (x BatteryState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatteryState_Status.Descriptor instead.
func (BatteryState_Status) EnumDescriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{3, 0}
}

type WifiState_Mode int32

const (
	// The wifi mode is unknown
	WifiState_MODE_UNSPECIFIED WifiState_Mode = 0
	// The robot is in STA mode
	WifiState_MODE_STA WifiState_Mode = 1
)

// Enum value maps for WifiState_Mode.
var (
	WifiState_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_STA",
	}
	WifiState_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MODE_STA":         1,
	}
)

func (x WifiState_Mode) Enum() *WifiState_Mode {
	p := new(WifiState_Mode)
	*p = x
	return p
}

func (x WifiState_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiState_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_raybot_v1_state_proto_enumTypes[1].Descriptor()
}

func (WifiState_Mode) Type() protoreflect.EnumType {
	return &file_raybot_v1_state_proto_enumTypes[1]
}

func (x WifiState_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiState_Mode.Descriptor instead.
func (WifiState_Mode) EnumDescriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{4, 0}
}

type GetRobotStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRobotStateRequest) Reset() {
	*x = GetRobotStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotStateRequest) ProtoMessage() {}

func (x *GetRobotStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotStateRequest.ProtoReflect.Descriptor instead.
func (*GetRobotStateRequest) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{0}
}

type GetRobotStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotState *RobotState `protobuf:"bytes,1,opt,name=robot_state,json=robotState,proto3" json:"robot_state,omitempty"`
}

func (x *GetRobotStateResponse) Reset() {
	*x = GetRobotStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotStateResponse) ProtoMessage() {}

func (x *GetRobotStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotStateResponse.ProtoReflect.Descriptor instead.
func (*GetRobotStateResponse) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{1}
}

func (x *GetRobotStateResponse) GetRobotState() *RobotState {
	if x != nil {
		return x.RobotState
	}
	return nil
}

// RobotState represents the state of the robot.
type RobotState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current state of the battery
	BatteryState *BatteryState `protobuf:"bytes,1,opt,name=battery_state,json=batteryState,proto3" json:"battery_state,omitempty"`
	// Current state of the wifi
	WifiState *WifiState `protobuf:"bytes,2,opt,name=wifi_state,json=wifiState,proto3" json:"wifi_state,omitempty"`
	// Current sensor data
	SensorData *SensorData `protobuf:"bytes,3,opt,name=sensor_data,json=sensorData,proto3" json:"sensor_data,omitempty"`
	// Current position data
	PositionData *PositionData `protobuf:"bytes,4,opt,name=position_data,json=positionData,proto3" json:"position_data,omitempty"`
}

func (x *RobotState) Reset() {
	*x = RobotState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotState) ProtoMessage() {}

func (x *RobotState) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotState.ProtoReflect.Descriptor instead.
func (*RobotState) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{2}
}

func (x *RobotState) GetBatteryState() *BatteryState {
	if x != nil {
		return x.BatteryState
	}
	return nil
}

func (x *RobotState) GetWifiState() *WifiState {
	if x != nil {
		return x.WifiState
	}
	return nil
}

func (x *RobotState) GetSensorData() *SensorData {
	if x != nil {
		return x.SensorData
	}
	return nil
}

func (x *RobotState) GetPositionData() *PositionData {
	if x != nil {
		return x.PositionData
	}
	return nil
}

type BatteryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Charge percentage (0-100)
	ChargePercentage float64 `protobuf:"fixed64,1,opt,name=charge_percentage,json=chargePercentage,proto3" json:"charge_percentage,omitempty"`
	// Current (mA)
	Current float64 `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	// Voltage (mV)
	Voltage float64 `protobuf:"fixed64,3,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// Temperature (â„ƒ)
	Temperature float64 `protobuf:"fixed64,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Current status of the battery
	Status BatteryState_Status `protobuf:"varint,5,opt,name=status,proto3,enum=raybot.v1.BatteryState_Status" json:"status,omitempty"`
}

func (x *BatteryState) Reset() {
	*x = BatteryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryState) ProtoMessage() {}

func (x *BatteryState) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryState.ProtoReflect.Descriptor instead.
func (*BatteryState) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{3}
}

func (x *BatteryState) GetChargePercentage() float64 {
	if x != nil {
		return x.ChargePercentage
	}
	return 0
}

func (x *BatteryState) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BatteryState) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *BatteryState) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *BatteryState) GetStatus() BatteryState_Status {
	if x != nil {
		return x.Status
	}
	return BatteryState_STATUS_UNSPECIFIED
}

type WifiState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current mode of the wifi
	CurrentMode WifiState_Mode `protobuf:"varint,1,opt,name=current_mode,json=currentMode,proto3,enum=raybot.v1.WifiState_Mode" json:"current_mode,omitempty"`
	// Current SSID of the wifi
	Ssid string `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
}

func (x *WifiState) Reset() {
	*x = WifiState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiState) ProtoMessage() {}

func (x *WifiState) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiState.ProtoReflect.Descriptor instead.
func (*WifiState) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{4}
}

func (x *WifiState) GetCurrentMode() WifiState_Mode {
	if x != nil {
		return x.CurrentMode
	}
	return WifiState_MODE_UNSPECIFIED
}

func (x *WifiState) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

type SensorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Front distance (cm)
	FrontDistance float64 `protobuf:"fixed64,1,opt,name=front_distance,json=frontDistance,proto3" json:"front_distance,omitempty"`
	// Rear distance (cm)
	RearDistance float64 `protobuf:"fixed64,2,opt,name=rear_distance,json=rearDistance,proto3" json:"rear_distance,omitempty"`
	// Drop distance (cm)
	DropDistance float64 `protobuf:"fixed64,3,opt,name=drop_distance,json=dropDistance,proto3" json:"drop_distance,omitempty"`
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{5}
}

func (x *SensorData) GetFrontDistance() float64 {
	if x != nil {
		return x.FrontDistance
	}
	return 0
}

func (x *SensorData) GetRearDistance() float64 {
	if x != nil {
		return x.RearDistance
	}
	return 0
}

func (x *SensorData) GetDropDistance() float64 {
	if x != nil {
		return x.DropDistance
	}
	return 0
}

// PositionData represents the position of the robot (Read from RFID).
type PositionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current location
	CurrentLocation string `protobuf:"bytes,1,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
	// Target location
	TargetLocation *string `protobuf:"bytes,2,opt,name=target_location,json=targetLocation,proto3,oneof" json:"target_location,omitempty"`
}

func (x *PositionData) Reset() {
	*x = PositionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raybot_v1_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionData) ProtoMessage() {}

func (x *PositionData) ProtoReflect() protoreflect.Message {
	mi := &file_raybot_v1_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionData.ProtoReflect.Descriptor instead.
func (*PositionData) Descriptor() ([]byte, []int) {
	return file_raybot_v1_state_proto_rawDescGZIP(), []int{6}
}

func (x *PositionData) GetCurrentLocation() string {
	if x != nil {
		return x.CurrentLocation
	}
	return ""
}

func (x *PositionData) GetTargetLocation() string {
	if x != nil && x.TargetLocation != nil {
		return *x.TargetLocation
	}
	return ""
}

var File_raybot_v1_state_proto protoreflect.FileDescriptor

var file_raybot_v1_state_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e,
	0x76, 0x31, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0a,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x62, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x77, 0x69, 0x66, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x0b, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x98, 0x02, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52,
	0x47, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x49, 0x53, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x89,
	0x01, 0x0a, 0x09, 0x57, 0x69, 0x66, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x22, 0x2a,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x10, 0x01, 0x22, 0x7d, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x72, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x72, 0x6f,
	0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x7b, 0x0a, 0x0c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x69, 0x0a, 0x11, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x72,
	0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x9f, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74,
	0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x62,
	0x65, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61,
	0x79, 0x62, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x52, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x09, 0x52, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x15, 0x52, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x52, 0x61, 0x79, 0x62, 0x6f, 0x74, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raybot_v1_state_proto_rawDescOnce sync.Once
	file_raybot_v1_state_proto_rawDescData = file_raybot_v1_state_proto_rawDesc
)

func file_raybot_v1_state_proto_rawDescGZIP() []byte {
	file_raybot_v1_state_proto_rawDescOnce.Do(func() {
		file_raybot_v1_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_raybot_v1_state_proto_rawDescData)
	})
	return file_raybot_v1_state_proto_rawDescData
}

var file_raybot_v1_state_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_raybot_v1_state_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_raybot_v1_state_proto_goTypes = []interface{}{
	(BatteryState_Status)(0),      // 0: raybot.v1.BatteryState.Status
	(WifiState_Mode)(0),           // 1: raybot.v1.WifiState.Mode
	(*GetRobotStateRequest)(nil),  // 2: raybot.v1.GetRobotStateRequest
	(*GetRobotStateResponse)(nil), // 3: raybot.v1.GetRobotStateResponse
	(*RobotState)(nil),            // 4: raybot.v1.RobotState
	(*BatteryState)(nil),          // 5: raybot.v1.BatteryState
	(*WifiState)(nil),             // 6: raybot.v1.WifiState
	(*SensorData)(nil),            // 7: raybot.v1.SensorData
	(*PositionData)(nil),          // 8: raybot.v1.PositionData
}
var file_raybot_v1_state_proto_depIdxs = []int32{
	4, // 0: raybot.v1.GetRobotStateResponse.robot_state:type_name -> raybot.v1.RobotState
	5, // 1: raybot.v1.RobotState.battery_state:type_name -> raybot.v1.BatteryState
	6, // 2: raybot.v1.RobotState.wifi_state:type_name -> raybot.v1.WifiState
	7, // 3: raybot.v1.RobotState.sensor_data:type_name -> raybot.v1.SensorData
	8, // 4: raybot.v1.RobotState.position_data:type_name -> raybot.v1.PositionData
	0, // 5: raybot.v1.BatteryState.status:type_name -> raybot.v1.BatteryState.Status
	1, // 6: raybot.v1.WifiState.current_mode:type_name -> raybot.v1.WifiState.Mode
	2, // 7: raybot.v1.RobotStateService.GetRobotState:input_type -> raybot.v1.GetRobotStateRequest
	3, // 8: raybot.v1.RobotStateService.GetRobotState:output_type -> raybot.v1.GetRobotStateResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_raybot_v1_state_proto_init() }
func file_raybot_v1_state_proto_init() {
	if File_raybot_v1_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_raybot_v1_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raybot_v1_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_raybot_v1_state_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raybot_v1_state_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raybot_v1_state_proto_goTypes,
		DependencyIndexes: file_raybot_v1_state_proto_depIdxs,
		EnumInfos:         file_raybot_v1_state_proto_enumTypes,
		MessageInfos:      file_raybot_v1_state_proto_msgTypes,
	}.Build()
	File_raybot_v1_state_proto = out.File
	file_raybot_v1_state_proto_rawDesc = nil
	file_raybot_v1_state_proto_goTypes = nil
	file_raybot_v1_state_proto_depIdxs = nil
}
